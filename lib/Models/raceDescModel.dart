import 'dart:convert';

import 'package:flutter/cupertino.dart';
import 'package:racing_eye/Models/raceRunnersModel.dart';

///
/// Code generated by jsonToDartModel https://ashamp.github.io/jsonToDartModel/
///
class RaceResultsModelPrizes {
/*
{
  "position_no": 1,
  "prize_sterling": 5400,
  "prize_euro": null,
  "prize_usd": 7398
}
*/

  int? positionNo;
  int? prizeSterling;
  String? prizeEuro;
  int? prizeUsd;

  RaceResultsModelPrizes({
    this.positionNo,
    this.prizeSterling,
    this.prizeEuro,
    this.prizeUsd,
  });
  RaceResultsModelPrizes.fromJson(Map<String, dynamic> json) {
    positionNo = json["position_no"]?.toInt();
    prizeSterling = json["prize_sterling"]?.toInt();
    prizeEuro = json["prize_euro"]?.toString();
    prizeUsd = json["prize_usd"]?.toInt();
  }
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = Map<String, dynamic>();
    data["position_no"] = positionNo;
    data["prize_sterling"] = prizeSterling;
    data["prize_euro"] = prizeEuro;
    data["prize_usd"] = prizeUsd;
    return data;
  }
}

class RaceResultsModel {
/*
{
  "horse_name": "Maksud",
  "prizes": [
    {
      "position_no": 1,
      "prize_sterling": 5400,
      "prize_euro": null,
      "prize_usd": 7398
    }
  ],
  "rp_ages_allowed_desc": "2yo",
  "distance_furlong_rounded": "7",
  "race_instance_uid": "793796",
  "id": 100,
  "race_datetime": "2021-10-19T14:15:00+01:00",
  "course_name": "NEWCASTLE (A.W)",
  "course_style_name": "Newcastle (AW)",
  "race_status_code": "4",
  "race_instance_title": "Play Coral Racing-Super-Series For Free EBF Restricted Novice Stakes (Horses In Bands B/C/D) (GBB)",
  "large_map_image_path": "https://re.victoriayachts.ae/courses/CURRAGH.jpg",
  "course_image": "https://re.victoriayachts.ae/courses/CURRAGH.jpg"
}
*/

  String? horseName;
  List<RaceResultsModelPrizes>? prizes = [];
  String? rpAgesAllowedDesc;
  String? distanceFurlongRounded;
  String? raceInstanceUid;
  int? id;
  String? raceDatetime;
  String? courseName;
  String? courseStyleName;
  String? raceStatusCode;
  String? raceInstanceTitle;
  String? largeMapImagePath;
  String? courseImage;

  RaceResultsModel({
    this.horseName,
    this.prizes,
    this.rpAgesAllowedDesc,
    this.distanceFurlongRounded,
    this.raceInstanceUid,
    this.id,
    this.raceDatetime,
    this.courseName,
    this.courseStyleName,
    this.raceStatusCode,
    this.raceInstanceTitle,
    this.largeMapImagePath,
    this.courseImage,
  });
  RaceResultsModel.fromJson(Map<String, dynamic> json) {
    // print(json['prizes']);
    horseName = json["horse_name"]?.toString();
    if (json["prizes"] != null) {
      final v = jsonDecode(json["prizes"]);
      print("VVVVV===>> $v");
      List<RaceResultsModelPrizes> arr0 = [];
      for (var i in v) {
        print(i);
        arr0.add(RaceResultsModelPrizes.fromJson(i));
      }
      print(arr0);
      for (var i in arr0) {
        prizes!.add(i);
      }
      print(prizes);
    }
    rpAgesAllowedDesc = json["rp_ages_allowed_desc"]?.toString();
    distanceFurlongRounded = json["distance_furlong_rounded"]?.toString();
    raceInstanceUid = json["race_instance_uid"]?.toString();
    id = json["id"]?.toInt();
    raceDatetime = json["race_datetime"]?.toString();
    courseName = json["course_name"]?.toString();
    courseStyleName = json["course_style_name"]?.toString();
    raceStatusCode = json["race_status_code"]?.toString();
    raceInstanceTitle = json["race_instance_title"]?.toString();
    largeMapImagePath = json["large_map_image_path"]?.toString();
    courseImage = json["course_image"]?.toString();
  }
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = Map<String, dynamic>();
    data["horse_name"] = horseName;
    if (prizes != null) {
      final v = prizes;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v.toJson());
      });
      data["prizes"] = arr0;
    }
    data["rp_ages_allowed_desc"] = rpAgesAllowedDesc;
    data["distance_furlong_rounded"] = distanceFurlongRounded;
    data["race_instance_uid"] = raceInstanceUid;
    data["id"] = id;
    data["race_datetime"] = raceDatetime;
    data["course_name"] = courseName;
    data["course_style_name"] = courseStyleName;
    data["race_status_code"] = raceStatusCode;
    data["race_instance_title"] = raceInstanceTitle;
    data["large_map_image_path"] = largeMapImagePath;
    data["course_image"] = courseImage;
    return data;
  }
}

class RaceResultsProvider extends ChangeNotifier {
  List<RaceResultsModel> raceData = [];
  List<RaceRunnersModel> runners = [];
  addRaceDetails(List<RaceResultsModel> data) {
    raceData.addAll(data);
    notifyListeners();
  }

  addRaceRunners(List<RaceRunnersModel> data) {
    runners.addAll(data);
    notifyListeners();
  }
}
